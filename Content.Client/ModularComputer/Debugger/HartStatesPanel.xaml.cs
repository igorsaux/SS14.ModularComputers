//-----------------------------------------------------------------------------
// Copyright 2024 Igor Spichkin
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------------

using Content.Client.Message;
using Content.Shared.ModularComputer.Debugger;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client.ModularComputer.Debugger;

[GenerateTypedNameReferences]
public sealed partial class HartStatesPanel : BoxContainer
{
    private static readonly Dictionary<ulong, string> RegisterNames = new()
    {
        { 0,    "X0:ZE  " },
        { 1,    "X1:RA  " },
        { 2,    "X2:SP  " },
        { 3,    "X3:GP  " },
        { 4,    "X4:TP  " },
        { 5,    "X5:T0  " },
        { 6,    "X6:T1  " },
        { 7,    "X7:T2  " },
        { 8,    "X8:S0  " },
        { 9,    "X9:S1  " },
        { 10,   "X10:A0 " },
        { 11,   "X11:A1 " },
        { 12,   "X12:A2 " },
        { 13,   "X13:A3 " },
        { 14,   "X14:A4 " },
        { 15,   "X15:A5 " },
        { 16,   "X16:A6 " },
        { 17,   "X17:A7 " },
        { 18,   "X18:S2 " },
        { 19,   "X19:S3 " },
        { 20,   "X20:S4 " },
        { 21,   "X21:S5 " },
        { 22,   "X22:S6 " },
        { 23,   "X23:S7 " },
        { 24,   "X24:S8 " },
        { 25,   "X25:S9 " },
        { 26,   "X26:S10" },
        { 27,   "X27:S11" },
        { 28,   "X28:T3 " },
        { 29,   "X29:T4 " },
        { 30,   "X30:T5 " },
        { 31,   "X31:T6 " },
        { 1024, "PC     " },
        { 1025, "CAUSE  " },
        { 1026, "TVAL   " }
    };

    private int? _selectedHart;
    private List<HartState> _hartStates = new();

    public HartStatesPanel()
    {
        RobustXamlLoader.Load(this);
    }
    
    public void UpdateState(MotherboardState motherboardState)
    {
        if (_hartStates.Count == motherboardState.HartStates.Count)
            return;

        _hartStates = motherboardState.HartStates;
        HartsList.RemoveAllChildren();
        
        if (_hartStates.Count == 0)
        {
            _selectedHart = null;

            UpdateRegistersPanel();
            
            return;
        }

        for (var i = 0; i < _hartStates.Count; i++)
        {
            var btn = new Button
            {
                Text = $"HART #{i}",
                HorizontalExpand = true,
                VerticalExpand = false,
                MaxHeight = 24
            };

            var hartId = i;
            btn.OnPressed += _ => OnHartSelected(hartId);
            
            HartsList.AddChild(btn);
        }
    }

    private void UpdateRegistersPanel()
    {
        RegistersList.RemoveAllChildren();
        
        if (_selectedHart is not { } hartId || !_hartStates.TryGetValue(hartId, out var hartState))
        {
            RegistersList.Visible = false;
            NoSelectedHart.Visible = true;
            
            return;
        }
        
        RegistersList.Visible = true;
        NoSelectedHart.Visible = false;

        foreach (var (register, value) in hartState.Registers)
        {
            var label = new RichTextLabel();
            label.SetMarkup($"[color=white]{RegisterNames[register]}[/color] = [color=white]0x{value:x8}[/color]");
            
            RegistersList.AddChild(label);
        }
    }
    
    private void OnHartSelected(int id)
    {
        _selectedHart = id;
        
        UpdateRegistersPanel();
    }
}
