//-----------------------------------------------------------------------------
// Copyright 2024 Igor Spichkin
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------------

using Content.Client.UserInterface.Controls;
using Content.Shared.ModularComputer.Debugger;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.ModularComputer.Debugger;

[GenerateTypedNameReferences]
public sealed partial class DebuggerWindow : FancyWindow
{
    public event Action? PowerToggled;
    
    public DebuggerWindow()
    {
        RobustXamlLoader.Load(this);

        TogglePowerButton.OnPressed += _ => PowerToggled?.Invoke();
    }
    
    public void UpdateState(DebuggerBoundUserInterfaceState state)
    {
        if (state.MotherboardState is not { } motherboardState)
        {
            NotConnectedLabel.Visible = true;
            MotherboardStateControl.Visible = false;
        }
        else
        {
            NotConnectedLabel.Visible = false;
            MotherboardStateControl.Visible = true;

            PoweredStateLabel.Text = Loc.GetString("modular-computers-debugger-ui-powered-state",
                ("state", motherboardState.IsPowered ? "TRUE" : "FALSE"));
            
            HartStatesPanel.UpdateState(motherboardState);
            MmioDeviceStatesPanel.UpdateState(motherboardState);
        }
    }
}
